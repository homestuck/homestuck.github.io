{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "dependencies": [
    "radix-ui"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/registry/ui/button.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from 'radix-ui'\r\nimport { tw, cva, type VariantProps, cn } from '@/lib/utils'\r\n\r\nconst buttonStyles = cva(\r\n  tw`rounded-base font-homestuck focus-visible:outline-hidden focus-visible:ring-primary hover:not-disabled:cursor-pointer hover:not-disabled:saturate-95 hover:not-disabled:brightness-110 ring-offset-main inline-flex items-center justify-center gap-2 whitespace-nowrap border-2 text-base uppercase antialiased transition-all will-change-auto focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50`,\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary: tw`border-primary-border border-t-primary-border/50 border-l-primary-border/50 bg-primary text-primary-foreground text-shadow-primary-border active:not-disabled:border-primary-border/50 active:not-disabled:border-t-primary-border active:not-disabled:border-l-primary-border shadow-primary-border`,\r\n        secondary: tw`border-secondary-border border-t-secondary-border/50 border-l-secondary-border/50 bg-secondary text-secondary-foreground text-shadow-secondary-border active:not-disabled:border-secondary-border/50 active:not-disabled:border-t-secondary-border active:not-disabled:border-l-secondary-border shadow-secondary-border`,\r\n        destructive: tw`border-destructive-border border-t-destructive-border/50 border-l-destructive-border/50 bg-destructive text-destructive-foreground text-shadow-destructive-border active:not-disabled:border-destructive-border/50 active:not-disabled:border-t-destructive-border active:not-disabled:border-l-destructive-border shadow-destructive-border`,\r\n        outline: tw`text-main-foreground border-border border-t-border/50 border-l-border/50 text-shadow-background active:not-disabled:border-border/50 active:not-disabled:border-t-border active:not-disabled:border-l-border shadow-border bg-main`,\r\n      },\r\n      size: {\r\n        default: tw`h-10 px-3 py-2`,\r\n        sm: tw`h-8 p-2`,\r\n        lg: tw`h-12 p-4`,\r\n        icon: tw`aspect-square`,\r\n      },\r\n      extrude: {\r\n        true: tw`hover:not-disabled:not-active:not-focus-visible:shadow-extrude-base text-shadow-extrude-base hover:not-disabled:not-active:not-focus-visible:-translate-[2px] shadow-none`,\r\n        false: null,\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'secondary',\r\n      size: 'default',\r\n      extrude: true,\r\n    },\r\n  }\r\n)\r\n\r\n/**\r\n * Button\r\n */\r\nconst Button = ({\r\n  className,\r\n  variant,\r\n  size,\r\n  extrude,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<'button'> &\r\n  VariantProps<typeof buttonStyles> & {\r\n    asChild?: boolean\r\n  }) => {\r\n  const Comp = asChild ? Slot.Root : 'button'\r\n  return (\r\n    <Comp\r\n      data-slot='button'\r\n      className={cn(buttonStyles({ variant, size, extrude, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nButton.displayName = 'Button'\r\n\r\nexport { Button, buttonStyles }\r\n",
      "type": "registry:ui"
    }
  ]
}