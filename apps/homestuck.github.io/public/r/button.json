{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "dependencies": [
    "radix-ui"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/registry/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from 'radix-ui'\nimport { tw, cva, type VariantProps, cn } from '@/lib/utils'\n\nconst buttonStyles = cva(\n  tw`rounded-base font-homestuck focus-visible:outline-hidden focus-visible:ring-primary hover:not-disabled:cursor-pointer hover:not-disabled:saturate-95 hover:not-disabled:brightness-110 ring-offset-main inline-flex items-center justify-center gap-2 whitespace-nowrap border-2 text-base uppercase antialiased transition-all will-change-auto focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50`,\n  {\n    variants: {\n      variant: {\n        primary: tw`border-primary-border border-t-primary-border/50 border-l-primary-border/50 bg-primary text-primary-foreground text-shadow-primary-border active:not-disabled:border-primary-border/50 active:not-disabled:border-t-primary-border active:not-disabled:border-l-primary-border shadow-primary-border`,\n        secondary: tw`border-secondary-border border-t-secondary-border/50 border-l-secondary-border/50 bg-secondary text-secondary-foreground text-shadow-secondary-border active:not-disabled:border-secondary-border/50 active:not-disabled:border-t-secondary-border active:not-disabled:border-l-secondary-border shadow-secondary-border`,\n        destructive: tw`border-destructive-border border-t-destructive-border/50 border-l-destructive-border/50 bg-destructive text-destructive-foreground text-shadow-destructive-border active:not-disabled:border-destructive-border/50 active:not-disabled:border-t-destructive-border active:not-disabled:border-l-destructive-border shadow-destructive-border`,\n        outline: tw`text-main-foreground border-border border-t-border/50 border-l-border/50 text-shadow-background active:not-disabled:border-border/50 active:not-disabled:border-t-border active:not-disabled:border-l-border shadow-border bg-main`,\n      },\n      size: {\n        default: tw`h-10 px-3 py-2`,\n        sm: tw`h-8 p-2`,\n        lg: tw`h-12 p-4`,\n        icon: tw`aspect-square`,\n      },\n      extrude: {\n        true: tw`hover:not-disabled:not-active:not-focus-visible:shadow-extrude-base text-shadow-extrude-base hover:not-disabled:not-active:not-focus-visible:-translate-[2px] shadow-none`,\n        false: null,\n      },\n    },\n    defaultVariants: {\n      variant: 'secondary',\n      size: 'default',\n      extrude: true,\n    },\n  }\n)\n\n/**\n * Button\n */\nconst Button = ({\n  className,\n  variant,\n  size,\n  extrude,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonStyles> & {\n    asChild?: boolean\n  }) => {\n  const Comp = asChild ? Slot.Root : 'button'\n  return (\n    <Comp\n      data-slot='button'\n      className={cn(buttonStyles({ variant, size, extrude, className }))}\n      {...props}\n    />\n  )\n}\nButton.displayName = 'Button'\n\nexport { Button, buttonStyles }\n",
      "type": "registry:ui"
    }
  ]
}